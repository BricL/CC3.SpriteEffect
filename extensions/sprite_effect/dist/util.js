"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.autoAssignTextureAsset = exports.autoAssignEffectAsset = void 0;
async function autoAssignEffectAsset(effectCompName) {
    try {
        console.log('Effect自動掛載啟動');
        const uuids = Editor.Selection.getSelected('node');
        const node = await Editor.Message.request('scene', 'query-node', uuids[0]);
        if (!node) {
            console.warn(`未選中節點`);
            return;
        }
        const index = node.__comps__.findIndex((v) => v.type === effectCompName);
        if (index === -1) {
            console.warn(`節點未掛載${effectCompName}組件`);
            return;
        }
        const effectFileName = effectCompName.replace(/([A-Z])/g, '_$1').toLowerCase().slice(1);
        const url = `db://assets/sprite_effect/effect/${effectFileName}.effect`;
        console.log(`url: ${url}`);
        const res = await Editor.Message.request('asset-db', 'query-asset-info', url);
        const success = await Editor.Message.request('scene', 'set-property', {
            uuid: node.uuid.value,
            path: `__comps__.${index}.effectAsset`,
            dump: {
                type: res.type,
                value: {
                    uuid: res.uuid,
                },
            },
        });
        if (success) {
            console.log(`Effect自動掛載成功`);
        }
        else {
            console.log(`Effect自動掛載失敗`);
        }
    }
    catch (ex) {
        console.error(`autoAssignEffectAsset: ${ex}`);
    }
}
exports.autoAssignEffectAsset = autoAssignEffectAsset;
async function autoAssignTextureAsset(effectCompName, propOfName, nameOfAsset) {
    try {
        console.log('Asset自動掛載啟動');
        const uuids = Editor.Selection.getSelected('node');
        const node = await Editor.Message.request('scene', 'query-node', uuids[0]);
        if (!node) {
            console.warn(`未選中節點`);
            return;
        }
        const index = node.__comps__.findIndex((v) => v.type === effectCompName);
        if (index === -1) {
            console.warn(`節點未掛載${effectCompName}組件`);
            return;
        }
        const url = `db://assets/sprite_effect/texture/${nameOfAsset}`;
        console.log(`url: ${url}`);
        const res = await Editor.Message.request('asset-db', 'query-asset-info', url);
        const success = await Editor.Message.request('scene', 'set-property', {
            uuid: node.uuid.value,
            path: `__comps__.${index}.${propOfName}`,
            dump: {
                type: res.type,
                value: {
                    uuid: res.uuid,
                },
            },
        });
        if (success) {
            console.log(`Texture自動掛載成功`);
        }
        else {
            console.log(`Texture自動掛載失敗`);
        }
    }
    catch (ex) {
        console.error(`autoAssignTextureAsset: ${ex}`);
    }
}
exports.autoAssignTextureAsset = autoAssignTextureAsset;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NvdXJjZS91dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFPLEtBQUssVUFBVSxxQkFBcUIsQ0FBQyxjQUFzQjtJQUM5RCxJQUFJO1FBQ0EsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUU1QixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuRCxNQUFNLElBQUksR0FBRyxNQUFNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdEIsT0FBTztTQUNWO1FBRUQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssY0FBYyxDQUFDLENBQUM7UUFDOUUsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDZCxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsY0FBYyxJQUFJLENBQUMsQ0FBQztZQUN6QyxPQUFPO1NBQ1Y7UUFFRCxNQUFNLGNBQWMsR0FBRyxjQUFjLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxLQUFLLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEYsTUFBTSxHQUFHLEdBQUcsb0NBQW9DLGNBQWMsU0FBUyxDQUFDO1FBQ3hFLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBRTNCLE1BQU0sR0FBRyxHQUFHLE1BQU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLGtCQUFrQixFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQzlFLE1BQU0sT0FBTyxHQUFHLE1BQU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLGNBQWMsRUFBRTtZQUNsRSxJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFlO1lBQy9CLElBQUksRUFBRSxhQUFhLEtBQUssY0FBYztZQUN0QyxJQUFJLEVBQUU7Z0JBQ0YsSUFBSSxFQUFFLEdBQUksQ0FBQyxJQUFJO2dCQUNmLEtBQUssRUFBRTtvQkFDSCxJQUFJLEVBQUUsR0FBSSxDQUFDLElBQUk7aUJBQ2xCO2FBQ0o7U0FDSixDQUFDLENBQUM7UUFFSCxJQUFJLE9BQU8sRUFBRTtZQUNULE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDL0I7YUFDSTtZQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7U0FDL0I7S0FDSjtJQUFDLE9BQU8sRUFBRSxFQUFFO1FBQ1QsT0FBTyxDQUFDLEtBQUssQ0FBQywwQkFBMEIsRUFBRSxFQUFFLENBQUMsQ0FBQztLQUNqRDtBQUNMLENBQUM7QUExQ0Qsc0RBMENDO0FBRU0sS0FBSyxVQUFVLHNCQUFzQixDQUFDLGNBQXNCLEVBQUUsVUFBa0IsRUFBRSxXQUFtQjtJQUN4RyxJQUFJO1FBQ0EsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUUzQixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNuRCxNQUFNLElBQUksR0FBRyxNQUFNLE1BQU0sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNQLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDdEIsT0FBTztTQUNWO1FBRUQsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFNLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLEtBQUssY0FBYyxDQUFDLENBQUM7UUFDOUUsSUFBSSxLQUFLLEtBQUssQ0FBQyxDQUFDLEVBQUU7WUFDZCxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsY0FBYyxJQUFJLENBQUMsQ0FBQztZQUN6QyxPQUFPO1NBQ1Y7UUFFRCxNQUFNLEdBQUcsR0FBRyxxQ0FBcUMsV0FBVyxFQUFFLENBQUM7UUFDL0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFFM0IsTUFBTSxHQUFHLEdBQUcsTUFBTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsa0JBQWtCLEVBQUUsR0FBRyxDQUFDLENBQUM7UUFDOUUsTUFBTSxPQUFPLEdBQUcsTUFBTSxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsY0FBYyxFQUFFO1lBQ2xFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQWU7WUFDL0IsSUFBSSxFQUFFLGFBQWEsS0FBSyxJQUFJLFVBQVUsRUFBRTtZQUN4QyxJQUFJLEVBQUU7Z0JBQ0YsSUFBSSxFQUFFLEdBQUksQ0FBQyxJQUFJO2dCQUNmLEtBQUssRUFBRTtvQkFDSCxJQUFJLEVBQUUsR0FBSSxDQUFDLElBQUk7aUJBQ2xCO2FBQ0o7U0FDSixDQUFDLENBQUM7UUFFSCxJQUFJLE9BQU8sRUFBRTtZQUNULE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDaEM7YUFDSTtZQUNELE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDaEM7S0FDSjtJQUFDLE9BQU8sRUFBRSxFQUFFO1FBQ1QsT0FBTyxDQUFDLEtBQUssQ0FBQywyQkFBMkIsRUFBRSxFQUFFLENBQUMsQ0FBQztLQUNsRDtBQUNMLENBQUM7QUF6Q0Qsd0RBeUNDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGF1dG9Bc3NpZ25FZmZlY3RBc3NldChlZmZlY3RDb21wTmFtZTogc3RyaW5nKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc29sZS5sb2coJ0VmZmVjdOiHquWLleaOm+i8ieWVn+WLlScpO1xuXG4gICAgICAgIGNvbnN0IHV1aWRzID0gRWRpdG9yLlNlbGVjdGlvbi5nZXRTZWxlY3RlZCgnbm9kZScpO1xuICAgICAgICBjb25zdCBub2RlID0gYXdhaXQgRWRpdG9yLk1lc3NhZ2UucmVxdWVzdCgnc2NlbmUnLCAncXVlcnktbm9kZScsIHV1aWRzWzBdKTtcbiAgICAgICAgaWYgKCFub2RlKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYOacqumBuOS4reevgOm7nmApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3QgaW5kZXggPSBub2RlLl9fY29tcHNfXy5maW5kSW5kZXgoKHY6IGFueSkgPT4gdi50eXBlID09PSBlZmZlY3RDb21wTmFtZSk7XG4gICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2Fybihg56+A6bue5pyq5o6b6LyJJHtlZmZlY3RDb21wTmFtZX3ntYTku7ZgKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGVmZmVjdEZpbGVOYW1lID0gZWZmZWN0Q29tcE5hbWUucmVwbGFjZSgvKFtBLVpdKS9nLCAnXyQxJykudG9Mb3dlckNhc2UoKS5zbGljZSgxKTtcbiAgICAgICAgY29uc3QgdXJsID0gYGRiOi8vYXNzZXRzL3Nwcml0ZV9lZmZlY3QvZWZmZWN0LyR7ZWZmZWN0RmlsZU5hbWV9LmVmZmVjdGA7XG4gICAgICAgIGNvbnNvbGUubG9nKGB1cmw6ICR7dXJsfWApO1xuXG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IEVkaXRvci5NZXNzYWdlLnJlcXVlc3QoJ2Fzc2V0LWRiJywgJ3F1ZXJ5LWFzc2V0LWluZm8nLCB1cmwpO1xuICAgICAgICBjb25zdCBzdWNjZXNzID0gYXdhaXQgRWRpdG9yLk1lc3NhZ2UucmVxdWVzdCgnc2NlbmUnLCAnc2V0LXByb3BlcnR5Jywge1xuICAgICAgICAgICAgdXVpZDogbm9kZS51dWlkLnZhbHVlIGFzIHN0cmluZyxcbiAgICAgICAgICAgIHBhdGg6IGBfX2NvbXBzX18uJHtpbmRleH0uZWZmZWN0QXNzZXRgLFxuICAgICAgICAgICAgZHVtcDoge1xuICAgICAgICAgICAgICAgIHR5cGU6IHJlcyEudHlwZSxcbiAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICB1dWlkOiByZXMhLnV1aWQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChzdWNjZXNzKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgRWZmZWN06Ieq5YuV5o6b6LyJ5oiQ5YqfYCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhgRWZmZWN06Ieq5YuV5o6b6LyJ5aSx5pWXYCk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBhdXRvQXNzaWduRWZmZWN0QXNzZXQ6ICR7ZXh9YCk7XG4gICAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gYXV0b0Fzc2lnblRleHR1cmVBc3NldChlZmZlY3RDb21wTmFtZTogc3RyaW5nLCBwcm9wT2ZOYW1lOiBzdHJpbmcsIG5hbWVPZkFzc2V0OiBzdHJpbmcpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zb2xlLmxvZygnQXNzZXToh6rli5XmjpvovInllZ/li5UnKTtcblxuICAgICAgICBjb25zdCB1dWlkcyA9IEVkaXRvci5TZWxlY3Rpb24uZ2V0U2VsZWN0ZWQoJ25vZGUnKTtcbiAgICAgICAgY29uc3Qgbm9kZSA9IGF3YWl0IEVkaXRvci5NZXNzYWdlLnJlcXVlc3QoJ3NjZW5lJywgJ3F1ZXJ5LW5vZGUnLCB1dWlkc1swXSk7XG4gICAgICAgIGlmICghbm9kZSkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGDmnKrpgbjkuK3nr4Dpu55gKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGluZGV4ID0gbm9kZS5fX2NvbXBzX18uZmluZEluZGV4KCh2OiBhbnkpID0+IHYudHlwZSA9PT0gZWZmZWN0Q29tcE5hbWUpO1xuICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYOevgOm7nuacquaOm+i8iSR7ZWZmZWN0Q29tcE5hbWV957WE5Lu2YCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB1cmwgPSBgZGI6Ly9hc3NldHMvc3ByaXRlX2VmZmVjdC90ZXh0dXJlLyR7bmFtZU9mQXNzZXR9YDtcbiAgICAgICAgY29uc29sZS5sb2coYHVybDogJHt1cmx9YCk7XG5cbiAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgRWRpdG9yLk1lc3NhZ2UucmVxdWVzdCgnYXNzZXQtZGInLCAncXVlcnktYXNzZXQtaW5mbycsIHVybCk7XG4gICAgICAgIGNvbnN0IHN1Y2Nlc3MgPSBhd2FpdCBFZGl0b3IuTWVzc2FnZS5yZXF1ZXN0KCdzY2VuZScsICdzZXQtcHJvcGVydHknLCB7XG4gICAgICAgICAgICB1dWlkOiBub2RlLnV1aWQudmFsdWUgYXMgc3RyaW5nLFxuICAgICAgICAgICAgcGF0aDogYF9fY29tcHNfXy4ke2luZGV4fS4ke3Byb3BPZk5hbWV9YCxcbiAgICAgICAgICAgIGR1bXA6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiByZXMhLnR5cGUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgICAgICAgICAgdXVpZDogcmVzIS51dWlkLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAoc3VjY2Vzcykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYFRleHR1cmXoh6rli5XmjpvovInmiJDlip9gKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBUZXh0dXJl6Ieq5YuV5o6b6LyJ5aSx5pWXYCk7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGBhdXRvQXNzaWduVGV4dHVyZUFzc2V0OiAke2V4fWApO1xuICAgIH1cbn0iXX0=